JAVA EE - Enterprise solution 
HTTP - is light weight , stateless,fasterst protocol 
Stateles - HTTP don't remember the data ,Broweser remeber , inorder to change from stateless to stateful method we are using servlet or JSP menthod 

HTTP Method :
Get request - get uphend the inormation in the end of the url, size limitation, get the information fom the server , GET is used
Post Request - it would't send at the end of URL , browser payload o send the data to application, it will split part by part, creation of something post request is used
put/patch - Partial modification patch is used and coplete modification put is used 
Delete - delete the request 
head - used for meta information - like browser version , call was made of 
trace - trace the valid client 
option - Dopdown used 

Type (HTTP Method)
- Meta infomtion - request header - information about client and data 
-data - information 

response - content type(text/html/image )
status code - varios are status code of HTTP - https://www.restapitutorial.com/httpstatuscodes.html
Architecture pasted in the issue in Githb for reference 

CGI - is traitional method , CGI improves the hardware part and it is not part of the Multithreading 
Servlet API - uses Multi threading concept 
Life cycle of servlet :
1)Void init(servlet config)
2}void service(servletrequest,servletreponse) - what exactly servlet need to do, process and respone preformed here 
3)void destroy()

Servlet Hierarchy:
Generic servlet - it handle anyother protocol
Httpservlet - Http specific in place of service method , put,post ,delete is child of generic servlet 
Void service(httpservlet response, httpservlet request)
void doget(httpservlet response, httpservlet request)
void do post*httpservlet response, httpservlet request)
void doput(httpservlet response, httpservlet request)
above mentoned are HTTP related services 

JVM - work with OS to implement the multi threading , Each and every OS has mlti threading 

First servlet App:
package exampleServlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class HelloServlet
 */
public class HelloServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public HelloServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#service(HttpServletRequest request, HttpServletResponse response)
	 */
//	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//		response.setContentType("text/html");
//		PrintWriter out=response.getWriter();
//		out.print("<h1>Hello from service()</h1>");
//	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		PrintWriter out=response.getWriter();
		out.print("<h1>Hello from doGet()</h1>");
		out.print("<h2>Welcome "+request.getParameter("firstName")+"</h2>");
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		PrintWriter out=response.getWriter();
		out.print("<h1>Hello from doPost()</h1>");
		out.print("<h2>Welcome "+request.getParameter("firstName")+"</h2>");
		out.print("<h2>Password : "+request.getParameter("password")+"</h2>");
		out.print("<h2>Gender : "+request.getParameter("gender")+"</h2>");
		out.print("<h2>Country : "+request.getParameter("country")+"</h2>");
		out.print("<h2>Hobbies : "+Arrays.toString(request.getParameterValues("hobby"))+"</h2>");
	}

}

Servlet Scope - 
1)servletrequest - resquest scope - whenever change in URI -new request is created 
2)servletcontext - application level or scope 
3)Httpsession - session scope - user associated or client assosiated - 

Void setattributes(string key ,object value);- insert as well as update
object getattributes(String key);-read
void removeattributes(String Key); - delete method


Create Login app:
 Step 1 : create HTML page with action = Login controller to connect the servlet for username and password 
 Step 2: Create servlet as controller with service menthod 
 Step 3: Create pjo class or model class 
 step 4: model class as the username, password with setter and getter 
 step 5:call the model class in the servlet by user user = new user()
 step 6: call the user id and password with request.getparameter(userid and password )
 step 7: create bo class and Exception class used in previous project 
 Step 8 : bo class to validate the user or throws exception 
 step 9 :create if statement to validate the data in the database with ending @simplilearn or password 
 Step 10: else class to invalid user id or password 
 Step 11:Create DAO implementation class 
 Step 12: we are using singleton java class - mutiple package of class to work as an single application 
 Step 13: dao implimentation of validating the data
 Step 14: use try with resource to connect the database because it doesn't have final block required 
 step 15: write the sql query "string sql = "select userid form loginmaster where userid=? and password=?
 step 16 : prepared statement created to connect the sql query 
 step 17: to execute query to execute the above mentioned code 
 step 18 : call the DAO class to the bo class 
 step 19 :create try and catch in the sevlet controller 
 step 20 :in catch field enter the rd=request.redirectdispatcher("login.html)
 step 21: rd(request,response) for the invalid user 
 step 22: Create another servlet for login sucess page 
 ste 23: call the servlet 2 - for sucess by declaring  rd= reques.getdispatcher("sucess") and rd.forward to another servlet 
 


 
 






