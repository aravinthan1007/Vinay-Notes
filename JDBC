JDBC Connection - Java can hold maximum of 1000 Data not more than using the List or serialization/deserializaion - Data Not organised properly , so used the sql 
Three layers - Presentation , Business Layer and Presistance Layer or Database Layer 
SQL Providers/No SQL - Not an RDBMS  :
  1.Storage - Large Storage and information permannently 
  2.organized Database management (RDBMS) - Sepration of Tables 
  3.SQL(DDL,DML,DCL ,TCL ,DQL)
  
  JDBC DB Connection 
  1.JDBC ODBC Driver 
  2.Java Native API 
  3.Network Protocol 
  4.Database Protocol (thin)- 100%pj Driver - lesser memory database
  
 Steps to Intract with Database 
 1.Load or Register Driver (Jar files)
 2.Open connection (url, Authendication to database)
 3.Create Statement
    -statement 
      -prepared statement - compile 1 time and run multiple times
      -callable statement - intrating with psql,nosql etc (strored procdure)
    SQL Injection - 
  4.Execute Query 
    -boolean Execute -DDL PL/SQL
    -int execute update -DML
    -Result Execute query - 
  5.Process the result 
  6.close connection 
 
 JDBC Connection using Eclipise to Load JDBC 
 
 public class Hellojdbc{
 
 public static void main(String[]args) {
 try{
 //step1 :load Driver
 class.forname("oracle.jdbc.oracledriver");
 system.out.prinln("Driver Loaded");
 //step 2 :Authendication and URL Link
 connection = Drivermanager.getconnection(url,username,password);
 string url ="URL of oracle";
 string username = "Ã¼sername";
 string password = "password";
 //step 3: create statement
 statement statement =connection.createstatement();
 string sql ="select id,name,ob,age from player";
 //step 4:Execute Query
 resultset resultset = connection.executequery(sql);
 system.out.println("it is executed"");
 //step 5:Process the result 
 While(result.next()) {
 system.out.println("id =" resultset.getint(id));
 }
 catch(classnotfoundException e){
 system.out.println(e);
 }fianlly{
 try{
 //step6: close connection
 connection.close();
 system.out.println(connection closed);
 }catch (sqlexception e){
 system.out.println(e);
 }
 }
  
