JDBC Connection - Java can hold maximum of 1000 Data not more than using the List or serialization/deserializaion - Data Not organised properly , so used the sql 
Three layers - Presentation , Business Layer and Presistance Layer or Database Layer 
SQL Providers/No SQL - Not an RDBMS  :
  1.Storage - Large Storage and information permannently 
  2.organized Database management (RDBMS) - Sepration of Tables 
  3.SQL(DDL,DML,DCL ,TCL ,DQL)
  
  JDBC DB Connection 
  1.JDBC ODBC Driver 
  2.Java Native API 
  3.Network Protocol 
  4.Database Protocol (thin)- 100%pj Driver - lesser memory database
  
 Steps to Intract with Database 
 1.Load or Register Driver (Jar files)
 2.Open connection (url, Authendication to database)
 3.Create Statement
    -statement 
      -prepared statement - compile 1 time and run multiple times
      -callable statement - intrating with psql,nosql etc (strored procdure)
    SQL Injection - 
  4.Execute Query 
    -boolean Execute -DDL PL/SQL
    -int execute update -DML
    -Result Execute query - 
  5.Process the result 
  6.close connection 
 
 JDBC Connection using Eclipise to Load JDBC (statement type Example)
 
 public class Hellojdbc{
 
 public static void main(String[]args) {
 try{
 //step1 :load Driver
 class.forname("oracle.jdbc.oracledriver");
 system.out.prinln("Driver Loaded");
 //step 2 :Authendication and URL Link
 connection = Drivermanager.getconnection(url,username,password);
 string url ="URL of oracle";
 string username = "üsername";
 string password = "password";
 //step 3: create statement
 statement statement =connection.createstatement();
 string sql ="select id,name,ob,age from player";
 //step 4:Execute Query
 resultset resultset = connection.executequery(sql);
 system.out.println("it is executed"");
 //step 5:Process the result 
 While(result.next()) {
 system.out.println("id =" resultset.getint(id));
 }
 catch(classnotfoundException e){
 system.out.println(e);
 }fianlly{
 try{
 //step6: close connection
 connection.close();
 system.out.println(connection closed);
 }catch (sqlexception e){
 system.out.println(e);
 }
 }
  
Common connection for Complete Java Program :

public oracleconnection {

private static connection connection {

public static connection getconnection() throws sqlexception ,classnotfoundException {

//step1 :load Driver
 class.forname("oracle.jdbc.oracledriver");
 system.out.prinln("Driver Loaded");
 //step 2 :Authendication and URL Link
 
 string url ="URL of oracle";
 string username = "üsername";
 string password = "password";
 retun connection = Drivermanager.getconnection(url,username,password);
}
}

insert into player and Team in Database 

Player table with 
insert to player Name,ID,DOB,TID from table;

TID is forign key to team table - refence with the Team table 

public class insertdemo {
public static void main (string [] args) {

try(connection connection = oracleconnection.getconnection()){
string sql1 ="insert into team(tid,teamname) values(? ,?)";
string sql2 ="insert into player(id,name,dob,age,tid) values(? ,?,?,?,?)";
preparedstatement preparedstatement = connection.preparedstatement(sql1);
preparedstatement.setint(1,101);
preparedstatement.setstring(2,red);
int x=preparedstatement.executeupdate();
system.out.println(x+"team updated");
}
catch(classnotfoundexception | sqlexception e){
system.put.println(e);
}
}

Modify the above code:

public class insertdemo {
public static void main (string [] args) {

try(connection connection = oracleconnection.getconnection()){

string sql2 ="insert into player(id,name,dob,age,tid) values(? ,?,?,?,?)";
preparedstatement preparedstatement = connection.preparedstatement(sql2);
preparedstatement.setint(1,101);
preparedstatement.setstring(2,Aravind);
preparedstatement.setint(3, new java.sql.date(new date()));
preparedstatement.setint(4,29);
preparedstatement.setint(5,102);
int x=preparedstatement.executeupdate();
system.out.println(x+"team updated");

}
catch(classnotfoundexception | sqlexception e){
if(e instanceof sqlexecption) {
try {
connection.rollback();//used rollback the query 
system.put.println("Query rollback"+connection);
} catch (SQL Exception e) {
system.out.println(e1);
}
}

e.printstacktrace();
}
finally {
if(connection !=null){
try{
connection.close();
}catch(sqlexception e){
system.out.println(e);
}
}
public static int createteam(connection connection ,int tid,string teamname) {
string sql1 ="insert into team(tid,teamname) values(? ,?)";
int x=0;
try{
preparedstatement preparedstatement = connection.preparedstatement(sql1);
preparedstatement.setint(1,101);
preparedstatement.setstring(2,red);
int x=preparedstatement.executeupdate();
system.out.println(x+"team updated");
}

} 



PL/SQL - SQL is not able to remember the query , but PSQL as reusable option 

PL
Methods(resuable)
loops 
decision
Exception 
data structure collection 
Array 
index by table 
table 
record 
trigger - delete , update , inser trigger is used eg (10% discount to user , but user request to get 11 % discount , trigger will execute and inform the user 10% discount only)
pointer - are called cursor , like ticket booking incase transaction rolledback or success resleased to the user 

Step 1 :Syntax PSQL - set serveroutput ON;
Anymous block - 

Syntax 
Declare - things needs to be Declare the data types or declaration block and not mandotry include 
Execution block is mandotry 
Exception block is also not mandotry 
end 





