Web services - W3 suggested the SOAP (XML) - Promblem is XML bulk for the complex application, reduce the speed of the application 

Rest is Architecture style - Roy finding suggested --> web service uses HTTP -->rest run on the HTTP formate appliction is simple xml, supported JSON , Localy understood by the server,html and text
https/http -put,get,delete,post, status code/mesage updated here . 

Rest is URL based and endpoint(URI or /welcome or/index)

Rest Implementation :
JAX-RS-->(Jersy API )
Spring Rest 

What makes a restful API?
Rest Architectural constrains - 6 Constrains 
1.unifrom interface -Cosistent Approach - uri should be meaningful and not complicated
2.client-server - existing as ifferent thing clint and server
3.statelessness - intraction between client and server should be setless , No client context should be stored in server , client need manage the state of it , if server maintained over the client session  it will make  the server busy and bulk data
4.Cacheing - Temporary memory -reduce number of call to database or server,- caching in server - reduce call to database , - caching i client-reduce call to server 
5.layered system - Avoid thing to client about how datastored, authendication works 
6.Code on demand - Source code shared to client , 

Postman - used to test the rest endpoint 

Get is for DB and Load is for Cache 

Front Controller - Come at one and exit at same point:
Jersey API to request to servlet container to classes again servlet to respone to Jersey API

Array - https://www.youtube.com/watch?v=c3RVW3KGIIE&t=24s

Create a BookApp - 
Step 1 : create Dyanmic web poject 
step 2: initiate the <servlet>,<servlet-name>,<servlet-class>,org.glasfish.jersey.servlet.servletcontainer</servlet-class>
step 3: initiate the <param-name> to jersey.config.server.provider.package to pakage of the jersy and <param-value>com.book.contorller,<servletname>jersyservlet and <url-mapping>*/
step 4:create the model/hello world class 
step 5: create the controller java class 
step 6:@Path("/")to connect XML param value to controller
step 7:@get method to search or update , create the procedure to access the get menthod in the postman same procedure followed in post,put,delete 
step 8: create the model app for Book or pojo class
step 9: @entity and @table to create the table in hibernate with int id(@generatedvalue( statergy=generationtype.auto),string name ,float cost
step 10: call the code into the servlet controller @path ,@Post ,@consume(Mediatype.applcation_json),@produces(Mediatype.application)
step 11: create book to call the DAO and BO layer 
step 12:create the BO and BoImpl , followed by the DAO and DAOImpl
step 13:Add the hiberanate.cfg file to communicate the database 
step 14: In DAO for create deleclare session ,transaction ,session.save ,transaction.commit 

step 11:open the postman and (name 










